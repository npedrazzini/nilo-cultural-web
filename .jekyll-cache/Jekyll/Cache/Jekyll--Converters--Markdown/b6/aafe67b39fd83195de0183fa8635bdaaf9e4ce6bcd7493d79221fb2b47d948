I"æ<h3 id="git-and-github-the-basics">Git and GitHub: the basics</h3>
<h4 id="locally-create-a-jekyll-site-from-scratch-and-host-it-on-github">Locally create a Jekyll site from scratch and host it on Github</h4>
<ol>
  <li>Create a local empty repository (<code class="language-plaintext highlighter-rouge">mkdir nameofthenewfolder</code>)</li>
  <li>Move into that repository (<code class="language-plaintext highlighter-rouge">cd nameofthenewfolder</code>) and initialize Git (i.e. Git version control) (<code class="language-plaintext highlighter-rouge">git init</code>).</li>
  <li>Create a new empty repository on GitHub.</li>
  <li>Add a new empty Jekyll site to the local repository (<code class="language-plaintext highlighter-rouge">jekyll new .</code>) (<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>)</li>
  <li>Add and commit the local Git repository (<code class="language-plaintext highlighter-rouge">git add .</code> + <code class="language-plaintext highlighter-rouge">git commit -m "commit message"</code>)</li>
  <li>Add a â€˜remote originâ€™ to your local Git repo (i.e. the SSH GitHub address):</li>
</ol>

<p><code class="language-plaintext highlighter-rouge">git remote add origin git@github.com:username/nameofrepo.git</code></p>
<ol>
  <li>Create a local Git branch called â€˜mainâ€™ (<code class="language-plaintext highlighter-rouge">git branch -M main</code>)</li>
  <li>Push the commit you made in point 4 to the remote repository on a new remote branch called â€˜mainâ€™ (<code class="language-plaintext highlighter-rouge">git push -u origin main</code>)</li>
  <li>DONE! Your local repository and your GitHub repository are now connected!</li>
</ol>

<h4 id="clone-an-existing-jekyll-theme-to-your-machine">Clone an existing Jekyll theme to your machine</h4>
<ol>
  <li>Fork a Jekyll theme from GitHub (e.g. Jekyll Now) and rename it (<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>)</li>
  <li>Mac: open your Terminal and change directory to your Desktop. Windows: open a Git Bash on your Desktop.</li>
  <li>In your forked GitHub repo, go to Code &gt; SSH and copy the address (git@github.com:yourusername/nameofgithubrepo.git)</li>
  <li>In your Terminal/Git Bash type:</li>
</ol>

<p><code class="language-plaintext highlighter-rouge">git clone git@github.com:yourusername/nameofgithubrepo.git</code></p>
<ol>
  <li>Try adding a file or making small edits, and add, commit and push, to check that everything works as expected.</li>
</ol>

<h3 id="test-your-jekyll-website">Test your Jekyll website</h3>
<ol>
  <li>Open VS Code. Open Folder (click on your website folder)</li>
  <li>Terminal &gt; New Terminal</li>
  <li>jekyll serve</li>
  <li>Navigate the local server</li>
</ol>

<h3 id="write-and-publish-a-blogpost">Write and publish a blogpost</h3>
<ol>
  <li>Under the _posts folder in your local website repository, create a new file called â€˜YYYY-MM-DD-a-title.mdâ€™. Add the date in that format (Year, Month, Day).</li>
  <li>
    <p>At the top of the file write two lines of Liquid:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ---
 layout: post
 title: Your  title
 ---

</code></pre></div>    </div>
  </li>
  <li>Just below these lines, write your blog post, test it, and push it to GitHub when youâ€™re ready.</li>
</ol>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>The dot means â€˜in the current directoryâ€™: I assume you are already in the directory where you want your site to be.Â <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>You can name it anything you like e.g. â€˜myawesomeblogâ€™ (without .github.io). If so, after renaming it, just go to Settings &gt; GitHub Pages &gt; â€˜Check it out here!â€™. Where it says â€˜<strong>Source</strong>. GitHub Pages is currently disabled. Select a source below to enable GitHub Pages for this repositoryâ€™ select â€˜mainâ€™. Your website is going to be automatically called yourusername.github.io/nameofgithubrepo/.Â <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET